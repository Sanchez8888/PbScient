DROP DATABASE IF EXISTS site;
CREATE DATABASE site;
USE site;

DROP TABLE IF EXISTS Client;
CREATE TABLE IF NOT EXISTS Client(
   id_client VARCHAR(50),
   nom VARCHAR(50),
   prenom VARCHAR(50),
   adresse VARCHAR(50),
   code_postal INT,
   ville VARCHAR(50),
   téléphone VARCHAR(50),
   mail VARCHAR(50) NOT NULL,
   motdepasse VARCHAR(50),
   radié BOOL,
   PRIMARY KEY(id_client)
);

DROP TABLE IF EXISTS Plat;
CREATE TABLE IF NOT EXISTS Plat(
   nom_plat VARCHAR(50),
   id_cuisinier VARCHAR(50),
   nb_personnes INT,
   type_plat VARCHAR(50),
   prix DOUBLE,
   date_fabrication VARCHAR(50),
   date_expiration VARCHAR(50),
   régime VARCHAR(50),
   origine VARCHAR(50),
   PRIMARY KEY(nom_plat)
);

DROP TABLE IF EXISTS Cuisinier;
CREATE TABLE IF NOT EXISTS Cuisinier(
   id_cuisinier VARCHAR(50),
   nom VARCHAR(50),
   prenom VARCHAR(50),
   adresse VARCHAR(50),
   code_postal INT,
   ville VARCHAR(50),
   téléphone INT,
   mail VARCHAR(50),
   motdepasse VARCHAR(50),
   radié BOOL,
   PRIMARY KEY(id_cuisinier)
);

DROP TABLE IF EXISTS ingrédient;
CREATE TABLE IF NOT EXISTS ingrédient(
   nomIng VARCHAR(50),
   volume REAL,
   PRIMARY KEY(nomIng)
);

DROP TABLE IF EXISTS Ligne_de_commande;
CREATE TABLE IF NOT EXISTS Ligne_de_commande(
   id_commande VARCHAR(50),
   adresse_livraison VARCHAR(50),
   dateC DATE,
   PRIMARY KEY(id_commande)
);

DROP TABLE IF EXISTS Commandes;
CREATE TABLE IF NOT EXISTS Commandes(
   id_commande VARCHAR(50) NOT NULL,
   id_client VARCHAR(50) NOT NULL,
   nom_plat VARCHAR(50),
   prix VARCHAR(50),
   date_commande VARCHAR(50),
   PRIMARY KEY(id_commande),
   FOREIGN KEY(id_client) REFERENCES Client(id_client),
   FOREIGN KEY(id_commande) REFERENCES Ligne_de_commande(id_commande)
);

DROP TABLE IF EXISTS prépare;
CREATE TABLE IF NOT EXISTS prépare(
   nom_plat VARCHAR(50),
   id_cuisinier VARCHAR(50),
   PRIMARY KEY(nom_plat, id_cuisinier),
   FOREIGN KEY(nom_plat) REFERENCES Plat(nom_plat),
   FOREIGN KEY(id_cuisinier) REFERENCES Cuisinier(id_cuisinier)
);

DROP TABLE IF EXISTS note;
CREATE TABLE IF NOT EXISTS note(
   id_client VARCHAR(50),
   id_cuisinier VARCHAR(50),
   commente VARCHAR(50),
   date_d_échange DATE,
   PRIMARY KEY(id_client, id_cuisinier),
   FOREIGN KEY(id_client) REFERENCES Client(id_client),
   FOREIGN KEY(id_cuisinier) REFERENCES Cuisinier(id_cuisinier)
);

DROP TABLE IF EXISTS inclus;
CREATE TABLE IF NOT EXISTS inclus(
   nom_plat VARCHAR(50),
   nomIng VARCHAR(50),
   PRIMARY KEY(nom_plat, nomIng),
   FOREIGN KEY(nom_plat) REFERENCES Plat(nom_plat),
   FOREIGN KEY(nomIng) REFERENCES ingrédient(nomIng)
);

DROP TABLE IF EXISTS livraison;
CREATE TABLE IF NOT EXISTS livraison(
   id_cuisinier VARCHAR(50),
   id_commande VARCHAR(50),
   date_livraison VARCHAR(50),
   adresse_livraison VARCHAR(50),
   trajet VARCHAR(50),
   PRIMARY KEY(id_cuisinier, id_commande),
   FOREIGN KEY(id_cuisinier) REFERENCES Cuisinier(id_cuisinier),
   FOREIGN KEY(id_commande) REFERENCES Ligne_de_commande(id_commande)
);

DROP TABLE IF EXISTS composé_de;
CREATE TABLE IF NOT EXISTS composé_de(
   nom_plat VARCHAR(50),
   id_commande VARCHAR(50),
   PRIMARY KEY(nom_plat, id_commande),
   FOREIGN KEY(nom_plat) REFERENCES Plat(nom_plat),
   FOREIGN KEY(id_commande) REFERENCES Ligne_de_commande(id_commande)
);

DROP TABLE IF EXISTS poste;
CREATE TABLE IF NOT EXISTS poste(
   nom_plat VARCHAR(50),
   id_cuisinier VARCHAR(50),
   PRIMARY KEY(nom_plat, id_cuisinier),
   FOREIGN KEY(nom_plat) REFERENCES Plat(nom_plat),
   FOREIGN KEY(id_cuisinier) REFERENCES Cuisinier(id_cuisinier)
);
SHOW TABLES;

SELECT * FROM CLIENT;

SELECT nom
FROM Client
WHERE Trim(ville) = 'Paris';

SELECT * FROM prépare;

SELECT * FROM Client WHERE radié = FALSE;

SELECT * FROM Cuisinier WHERE ville = 'Paris';

SELECT * FROM Plat WHERE type_plat = 'Dessert';

SELECT * FROM Commandes WHERE date_commande > '2025-02-01';

SELECT * FROM Plat WHERE id_cuisinier = '3';

SELECT Client.nom, Client.prenom, Commandes.nom_plat
FROM Client
JOIN Commandes ON Client.id_client = Commandes.id_client;

SELECT Client.nom, Client.prenom, Commandes.nom_plat, Ligne_de_commande.adresse_livraison
FROM Commandes
JOIN Client ON Commandes.id_client = Client.id_client
JOIN Ligne_de_commande ON Commandes.id_commande = Ligne_de_commande.id_commande;

SELECT DISTINCT Cuisinier.nom, Cuisinier.prenom
FROM Cuisinier
JOIN prépare ON Cuisinier.id_cuisinier = prépare.id_cuisinier
JOIN Commandes ON Commandes.nom_plat = prépare.nom_plat;

SELECT Plat.nom_plat, ingrédient.nomIng
FROM inclus
JOIN Plat ON inclus.nom_plat = Plat.nom_plat
JOIN ingrédient ON inclus.nomIng = ingrédient.nomIng;

SELECT Client.nom AS client, Cuisinier.nom AS cuisinier, note.commente, note.date_d_échange
FROM note
JOIN Client ON note.id_client = Client.id_client
JOIN Cuisinier ON note.id_cuisinier = Cuisinier.id_cuisinier;

SELECT id_client, SUM(prix) AS total_dépensé
FROM Commandes
GROUP BY id_client;

SELECT AVG(prix) AS prix_moyen FROM Plat;

SELECT id_cuisinier, COUNT(nom_plat) AS nombre_de_plats
FROM prépare
GROUP BY id_cuisinier;

SELECT ville, COUNT(*) AS nombre_de_clients
FROM Client
GROUP BY ville
ORDER BY nombre_de_clients DESC;

SELECT Client.nom, Client.prenom
FROM Client
JOIN Cuisinier ON Client.id_client = Cuisinier.id_cuisinier;
